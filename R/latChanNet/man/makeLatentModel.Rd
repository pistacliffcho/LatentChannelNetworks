% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LatClass.R
\name{makeLatentModel}
\alias{makeLatentModel}
\title{Make Latent Structure model}
\usage{
makeLatentModel(
  edgeList,
  nDims,
  model = "LCN",
  missingList = NULL,
  metadata = NULL
)
}
\arguments{
\item{edgeList}{An matrix edgelist. Can be nx2 (both) or nx3 (BKN only)}

\item{model}{Type of model to fit. Options are "LCN" or "BKN"}

\item{missingList}{A nx2 matrix edgelist of edges for which the value is unknown}

\item{metadata}{A data.frame with all factors representing metadata}

\item{nDim}{Number of latent dimensions to use}
}
\description{
Make a latent class model. 
Can be used for predicting unknown edge status 
and unknown metadata.
}
\details{
Fits either a Latent Channels Network (LCN), 
or the symmetric low-rank Poisson model of 
Ball, Karrer and Newman (BKN). 
The model assumes an undirected graph. 

If edges are counts, use the BKN model. 
The data format for each row is (i,j, count),
with i,j as integer IDs starting at 1. 

If edges are binary, either a BKN or LCN model 
may be used, 
although an LCN model is somewhat more appropriate. 

LCN model:

Clifford Anderson-Bergman, Phan Nguyen, and Jose Cadena Pico.
"Latent Channel Networks", submitted 2019

BKN model: 

Brian Ball, Brian Karrer, and Mark EJ Newman. 
"Efficient and principled method for detecting 
communities in networks." 
Physical Review E 84.3 (2011): 036103.
}
\examples{
data(email_data)
# Building model with metadata
df = data.frame(dpt = email_data$nodeDpt)
model = makeLatentModel(email_data$edgeList, 
                        10, 
                        metadata = df)
# Fitting model
model$fit()

# Predicting a two edge probabilities
predict(model, )

}
