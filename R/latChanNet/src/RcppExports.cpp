// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// predict_lat_edges
NumericVector predict_lat_edges(IntegerVector r_i, IntegerVector r_j, NumericMatrix pmat, std::string model);
RcppExport SEXP _latChanNet_predict_lat_edges(SEXP r_iSEXP, SEXP r_jSEXP, SEXP pmatSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type r_i(r_iSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type r_j(r_jSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pmat(pmatSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    rcpp_result_gen = Rcpp::wrap(predict_lat_edges(r_i, r_j, pmat, model));
    return rcpp_result_gen;
END_RCPP
}
// predict_crossedge
NumericMatrix predict_crossedge(IntegerVector r_i, IntegerVector r_j, NumericMatrix pmat, std::string model);
RcppExport SEXP _latChanNet_predict_crossedge(SEXP r_iSEXP, SEXP r_jSEXP, SEXP pmatSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type r_i(r_iSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type r_j(r_jSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pmat(pmatSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    rcpp_result_gen = Rcpp::wrap(predict_crossedge(r_i, r_j, pmat, model));
    return rcpp_result_gen;
END_RCPP
}
// simLCN
NumericMatrix simLCN(NumericMatrix p_mat);
RcppExport SEXP _latChanNet_simLCN(SEXP p_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p_mat(p_matSEXP);
    rcpp_result_gen = Rcpp::wrap(simLCN(p_mat));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_LCN();
RcppExport SEXP _rcpp_module_boot_BKN();

static const R_CallMethodDef CallEntries[] = {
    {"_latChanNet_predict_lat_edges", (DL_FUNC) &_latChanNet_predict_lat_edges, 4},
    {"_latChanNet_predict_crossedge", (DL_FUNC) &_latChanNet_predict_crossedge, 4},
    {"_latChanNet_simLCN", (DL_FUNC) &_latChanNet_simLCN, 1},
    {"_rcpp_module_boot_LCN", (DL_FUNC) &_rcpp_module_boot_LCN, 0},
    {"_rcpp_module_boot_BKN", (DL_FUNC) &_rcpp_module_boot_BKN, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_latChanNet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
